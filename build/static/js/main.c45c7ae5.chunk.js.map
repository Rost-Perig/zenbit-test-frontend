{"version":3,"sources":["components/Footer/Footer.module.css","components/InputsForm/InputsForm.module.css","components/Section/Section.js","redux/messages/messages-operations.js","components/InputsForm/InputsForm.js","components/Footer/Footer.js","components/Modal/Modal.js","App.js","redux/messages/messages-reducer.js","redux/store.js","index.js","components/Modal/Modal.module.css"],"names":["module","exports","Section","children","className","axios","defaults","baseURL","addMessage","createAsyncThunk","a","name","email","message","rejectWithValue","post","response","data","InputsForm","useState","setName","setEmail","setMessage","dispatch","useDispatch","handleInputChange","e","currentTarget","value","reset","s","frame","onSubmit","preventDefault","contactToServer","form","autoComplete","input","type","placeholder","onChange","pattern","title","required","style","height","paddingTop","btn","Footer","footer","links","href","link","icon","Modal","showModal","setShowModal","useEffect","window","addEventListener","handleKeyDown","code","toggleModal","messages","useSelector","store","items","lastMessage","useMemo","length","Overlay","onClick","newMessage","mess","order","App","createReducer","fulfilled","state","action","payload","loadingSpinner","pending","rejected","combineReducers","configureStore","reducer","messagesReducer","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.c45c7ae5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3xuut\",\"links\":\"Footer_links__3-Hw4\",\"icon\":\"Footer_icon__2Gwtp\",\"link\":\"Footer_link__2VZ-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frame\":\"InputsForm_frame__2hmJR\",\"form\":\"InputsForm_form__1yz1u\",\"input\":\"InputsForm_input__gEbc-\",\"messages\":\"InputsForm_messages__3tjrX\",\"btn\":\"InputsForm_btn__2aWny\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ children }) => {\r\n  return (\r\n    <section>\r\n        <div className=\"container\">\r\n            {children}\r\n         </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;","import { createAsyncThunk } from '@reduxjs/toolkit'; // при использовании createAsyncThunk\r\nimport axios from 'axios';\r\naxios.defaults.baseURL = 'https://mess-test-api.herokuapp.com/api';\r\n\r\n/*================при использовании createAsyncThunk================*/\r\n\r\nexport const addMessage = createAsyncThunk(\r\n  'inputsForm/addMessage',\r\n  async ({name, email, message}, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post('/messages', {name, email, message});\r\n      // console.log('data: ', response.data.data)\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\n/*на будущее. Можно еще прописать fetchMessages - get для одного, а также - put  */\r\n\r\n// export const delMessage = createAsyncThunk(\r\n//   'messageData/delMessage',\r\n//   async (messageId, { rejectWithValue }) => {\r\n//     try {\r\n//       const response = await axios.delete(`/messages/${messageId}`);\r\n//       // console.log('id: ', response.data)\r\n//       return response.data.id\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   }\r\n// );\r\n\r\n// export const fetchMessages = createAsyncThunk(\r\n//   'messagesList/fetchMessages',\r\n//   async (_, { rejectWithValue }) => {\r\n//     try {\r\n//       const response = await axios.get('/messages');\r\n//       return response.data\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   }\r\n// );\r\n\r\n\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux'; \r\nimport  { addMessage } from 'redux/messages/messages-operations';\r\nimport s from './InputsForm.module.css';\r\n\r\nexport default function InputsForm() { \r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const contactToServer = ({name, email, message}) => dispatch(addMessage({name, email, message}));  \r\n\r\n  const handleInputChange = e => {\r\n    switch (e.currentTarget.name) {\r\n      case 'subscriber':\r\n        setName(e.currentTarget.value);\r\n        break;\r\n      case 'email':\r\n        setEmail(e.currentTarget.value);\r\n        break;\r\n      case 'message':\r\n        setMessage(e.currentTarget.value);\r\n        break;\r\n      default:\r\n        break;\r\n    };\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    contactToServer({name, email, message});\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setEmail('');\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n      <div className={s.frame}>\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className={s.form}\r\n        autoComplete=\"on\">\r\n            <h2>Reach out to us!</h2>\r\n            <label >\r\n              <input\r\n                className={s.input}\r\n                type=\"text\"\r\n                name=\"subscriber\"\r\n                placeholder=\"Your name*\"\r\n                value={name}\r\n                onChange={handleInputChange}  \r\n                pattern=\"^[a-zA-Zа-яА-Я0-9]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, цифр, апострофа, тире и пробелов.\"\r\n                required\r\n              />\r\n            </label>\r\n\r\n            <label>\r\n                <input\r\n                className={s.input}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Your e-mail*\"\r\n                value={email}\r\n                onChange={handleInputChange} \r\n                required\r\n              />\r\n            </label> \r\n\r\n        <label >\r\n              <textarea\r\n                className={s.input}\r\n                style={{height: 189, paddingTop: 31}}\r\n                type=\"text\"\r\n                // maxlength=\"120\"\r\n                name=\"message\"\r\n                placeholder=\"Your message*\"\r\n                value={message}\r\n                onChange={handleInputChange}  \r\n                pattern=\"^[a-zA-Zа-яА-Я0-9]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Сообщение может содержать не более 120 знаков и состоять только из букв, цифр, апострофа, тире и пробелов.\"\r\n                required>\r\n              </textarea>\r\n            </label>\r\n        <button type=\"submit\" className={s.btn}>Send message</button>\r\n        </form> \r\n      </div>\r\n    )\r\n  };\r\n\r\nInputsForm.propTypes = {\r\n  subscriber: PropTypes.string,\r\n  email: PropTypes.string,\r\n  message: PropTypes.string\r\n};\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport s from './Footer.module.css';\r\nimport { TiSocialLinkedin, TiSocialTwitter, TiSocialFacebook, TiSocialPinterest } from \"react-icons/ti\";\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className={s.footer}>\r\n            <div className={s.links}>\r\n                <a href='https://www.linkedin.com' className={s.link}>\r\n                    <TiSocialLinkedin className={s.icon}/>\r\n                </a>\r\n                <a href='https://twitter.com/?lang=uk' className={s.link}>\r\n                    <TiSocialTwitter className={s.icon}/>\r\n                </a>\r\n                <a href='https://about.facebook.com/' className={s.link}>\r\n                    <TiSocialFacebook className={s.icon}/>\r\n                </a>\r\n                <a href='https://www.pinterest.com/' className={s.link}>\r\n                    <TiSocialPinterest className={s.icon}/>\r\n                </a>    \r\n            </div>\r\n        </footer>\r\n    )\r\n};","import React, {useEffect, useState, useMemo} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport s from './Modal.module.css';\r\n\r\nconst Modal = () => {  \r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n            window.addEventListener('keydown', e => handleKeyDown(e))\r\n    });\r\n\r\n    const handleKeyDown = e => {\r\n        (e.code === 'Escape') && toggleModal();\r\n    };\r\n\r\n    const toggleModal = () => setShowModal(!showModal);\r\n\r\n    const messages = useSelector(store => store.message.items);\r\n\r\n    const lastMessage = useMemo(() => {\r\n        return messages[messages.length - 1]\r\n    }, [messages]);\r\n\r\n    // lastMessage && const { name, message } = lastMessage.data.newMessage; \r\n\r\n//     if (!!lastMessage) {\r\n//      const { name, message } = lastMessage.data.newMessage; \r\n//   }\r\n    \r\n\r\n    useEffect(() => {\r\n        if (messages.length) {\r\n            setShowModal(true)\r\n        }\r\n    }, [messages]);\r\n\r\n    return (\r\n        showModal ?\r\n            (<div className={s.Overlay} onClick={toggleModal}>\r\n                <div className={s.Modal}>\r\n                    <p className={s.title}>Уважаемый {lastMessage.data.newMessage.name}!</p>\r\n                    <p className={s.mess}>Получена Ваша заявка:</p>\r\n                    <p className={s.order}>{lastMessage.data.newMessage.message}</p>\r\n                    <p className={s.mess}>Она будет выполнена сразу после проплаты. Банковские реквизиты и сумму мы сообщим Вам отдельным письмом. Ваш емейл нам известен :)</p>\r\n                </div>\r\n            </div>) :\r\n            null\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n\r\n","import './App.css';\nimport Section from 'components/Section';\nimport InputsForm from 'components/InputsForm';\nimport Footer from 'components/Footer/Footer';\nimport Modal from 'components/Modal';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Section>\n        <InputsForm />\n      </Section>\n      <Footer />\n      <Modal />\n    </div>\n  )\n};\n\nexport default App;\n","\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addMessage } from './messages-operations'; // c createAsyncThunk\r\n\r\nconst items = createReducer([], {\r\n      //===== c createAsyncThunk =====//\r\n    [addMessage.fulfilled]: (state, action) => [...state, action.payload], \r\n  \r\n});\r\n\r\nconst loadingSpinner = createReducer(false, {\r\n    //===== c createAsyncThunk =====//\r\n  [addMessage.pending]: () => true,\r\n  [addMessage.fulfilled]: () => false,\r\n  [addMessage.rejected]: () => false, \r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    loadingSpinner\r\n});\r\n\r\n\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport messagesReducer from './messages/messages-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    message: messagesReducer\r\n  },\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nconsole.log('Привіт, світ! Життя химерне!');\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__25qEr\",\"Modal\":\"Modal_Modal__3NKhz\",\"mess\":\"Modal_mess__2y0B4\",\"title\":\"Modal_title__3-dEz\",\"order\":\"Modal_order__54P_R\"};"],"sourceRoot":""}